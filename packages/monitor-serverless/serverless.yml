service: monitor-serverless
plugins:
  - '@ns3/nx-serverless/plugin'
  - serverless-offline

package:
  individually: true

custom:
  stage: ${opt:stage, 'dev'}
  serverless-offline:
    httpPort: 3333
    lambdaPort: 2333
    noPrependStageInUrl: true

provider:
  name: aws
  runtime: nodejs14.x
  stage: ${self:custom.stage}
  endpointType: regional
  region: eu-west-1
  timeout: 20
  lambdaHashingVersion: 20201221 # removes deprecation warning (remove in serverless v3)
  apiGateway:
    shouldStartNameWithService: true # removes deprecation warning (remove in serverless v3)
  environment:
    APP_ENV: ${self:custom.stage}
    IS_PRODUCTION: '${file(./src/environments/config.${self:custom.stage}.json):is_production}'
    NODE_OPTIONS: --enable-source-maps
  iamRoleStatements:
    - Effect: "Allow"
      Action: 
        - 'dynamodb:*'
      Resource: 
        Fn::GetAtt:
          - channels
          - Arn



functions:
  scheduler:
    handler: src/handlers/scheduler.handler
    events:
      - schedule: cron(0/1 * * * ? *)
